name: Update cloud infrastructure
run-name: ${{ github.actor }} is updating cloud files and infrastructure
on:
  push:
    paths:
      - 'Front\ End\ Files/**'
      - 'Back\ End\ Files/**'
      - '.github/workflows/**'
      - 'terraform/**'
      - 'cypress/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: dir listing
        run: ls

      - name: Terraform Init
        run: terraform -chdir=terraform/build/ init

      - name: Terraform Validate
        run: terraform -chdir=terraform/build/ validate

      - name: Terraform Plan
        run: terraform -chdir=terraform/build/ plan -out=planfile
        continue-on-error: true

      - name: Terraform Apply
        run: terraform -chdir=terraform/build/ apply "planfile"


  publish-artifact:
    needs: build
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: write

    steps:
      # actions/checkout MUST come before auth
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/publish-artifacts/ init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform/publish-artifacts/ validate

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform/publish-artifacts/ plan -input=false
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false


  deploy:
    needs: publish-artifact
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: write

    steps:
      # actions/checkout MUST come before auth
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/deploy/ init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform/deploy/ validate

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform/deploy/ plan -input=false
        continue-on-error: true

      - name: Update Pull Request comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false



  end-to-end-test:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        id: cypress_test
        uses: cypress-io/github-action@v5 # use the explicit version number
