name: Update cloud infrastructure
run-name: Infrastructure Pipeline
on:
  push:
    paths:
      - 'Back\ End\ Files/**'
      - '.github/workflows/**'
      - 'terraform/**'
      - 'cypress/**'
      - '**.tf'

jobs:

  deploySiteInfrastructure:
    #needs: build
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      
      - name: Check Out Repository
        uses: 'actions/checkout@v4'

      #auth so we can use gcloud. make sure to have run the oidc infr before this and updated these attributes
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/356251802763/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: github-actions-sa@resume-challenge-kyle-3.iam.gserviceaccount.com

      # #auth and setup to terraform cloud
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
     
      #run the terraform that sets up the infrastructure 
      - name: Apply Infrastructure Terraform 
        run: cd infra; terraform init; terraform plan 

      #run some end to end tests using cypress
      - name: End to End Functional Tests (Cypress)
        uses: cypress-io/github-action@v5 # use the explicit version number
        

  staticVulnScan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      #vuln scan the infrastructure deployment terraform
      - name: Checkov Terraform Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          soft_fail: true # optional: do not return an error code if there are failed checks
          output_format: cli, sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_file_path: console,vulnresults/checkov-results.sarif # folder and name of results file
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry

      #vuln scan the python 3.6 code
      - name: Snyk Python 3.6 Vulnerability Scan
        uses: snyk/actions/python-3.6@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=vulnresults/python-results.sarif

      #vuln scan the Node code
      - name: Snyk Node Vulnerability Scan
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=vulnresults/node-results.sarif

      #vuln scan the iac code
      - name: Snyk IaC Vulnerability Scan
        uses: snyk/actions/iac@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=vulnresults/iacsnyk-results.sarif

      #upload the sarif file results to github actions security
      - name: Upload SARIF Files to Github Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: vulnresults

